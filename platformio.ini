; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = nordicnrf52
board = nano33ble
framework = arduino
build_src_filter = +<${PIOENV}.cpp>
build_flags = -D USE_BLE=0 -D USE_BLE_SENSE=1
monitor_filters = send_on_enter
monitor_speed = 115200
monitor_echo = yes
monitor_eol = LF

lib_deps =
    ; Sensor Libraries  
    https://github.com/arduino-libraries/Arduino_LPS22HB
    https://github.com/sparkfun/SparkFun_BMI270_Arduino_Library

    ; TVC Control Libraries
    tkjelectronics/Kalman Filter Library@1.0.2
    arduino-libraries/Servo@1.2.2

    ; SD Card Libraries
    SPI
    Wire

    SdFat@2.2.3
    SDConfig@1.1.0

[env:blink]
lib_deps = 
    arduino-libraries/Servo@1.2.2

[env:interactive-test]
lib_deps = 
	${env.lib_deps}
	ArduinoBLE
	HardwareBLESerial@1.0.0
build_flags = -D USE_BLE=1 -D USE_BLE_SENSE=0

[env:interactive-test-noble]
build_src_filter = +<interactive-test.cpp>
build_flags = -D USE_BLE=0 -D USE_BLE_SENSE=1

[env:interactive-test-esp32]
platform = espressif32
board = arduino_nano_esp32
lib_deps = 
	${env.lib_deps}
	ESP32Servo@1.0.0

[env:interactive-test-rp2040]
platform = raspberrypi
build_src_filter = +<interactive-test.cpp>
board = nanorp2040connect
build_flags = -D USE_BLE=1 -D USE_RP2040=1
lib_deps = 
	${env:interactive-test.lib_deps}
	arduino-libraries/WifiNINA
    https://github.com/khoih-prog/LittleFS_Mbed_RP2040
    https://github.com/adafruit/Adafruit_LSM6DS

[env:interactive-test-rp2040-noble]
platform = raspberrypi
build_src_filter = +<interactive-test.cpp>
board = nanorp2040connect
lib_deps = 
	${env.lib_deps}
	arduino-libraries/WifiNINA    
    https://github.com/adafruit/Adafruit_LSM6DS

build_flags = -D USE_BLE=0 -D USE_RP2040=1

[env:interactive-test-nosense]
build_src_filter = +<interactive-test.cpp>
build_flags = -D USE_BLE=1 -D USE_BLE_SENSE=0
lib_deps = 
	${env:interactive-test.lib_deps}

[env:interactive-test-nosense-noble]
build_src_filter = +<interactive-test.cpp>
build_flags = -D USE_BLE=0 -D USE_BLE_SENSE=0
lib_deps =
    ${env.lib_deps}

# Flight routines
[env:main]       ; Main flight code
lib_deps=      
    ${env:interactive-test.lib_deps}

[env:main-tvc]   ; Main flight code (TVC only)  
build_flags = -D USE_BLE=1 -D USE_BLE_SENSE=0
lib_deps=
    ${env:main.lib_deps}

[env:sitl-test] ; SITL test
build_flags = -D USE_BLE=0 -D USE_BLE_SENSE=0
lib_deps = 
    ${env:interactive-test-noble.lib_deps}

[env:main-tvc-rp2040]
platform = raspberrypi
build_src_filter = +<main-tvc.cpp>
board = nanorp2040connect
build_flags = -D USE_BLE=1 -D USE_RP2040=1
lib_deps = 
	${env:interactive-test-rp2040.lib_deps}

[env:main-tvc-rp2040-noble]
platform = raspberrypi
build_src_filter = +<main-tvc.cpp>
board = nanorp2040connect
build_flags = -D USE_BLE=0 -D USE_RP2040=1
lib_deps = 
	${env:interactive-test-rp2040-noble.lib_deps}


[env:calibrateBMI]
[env:benchSdCard]
[env:formatSdCard]

; Component est scripts
[env:alt-test]              ; Altitude test
[env:compl-test]            ; Complementary filter test
[env:gyro-test]             ; Pure gyro test
[env:led-test]
platform = raspberrypi
board = nanorp2040connect
build_flags = -D USE_BLE=1 -D USE_RP2040=1
lib_deps = 
	${env.lib_deps}
	arduino-libraries/WifiNINA
[env:lfs-test]         ; LittleFS test
platform = raspberrypi
board = nanorp2040connect
build_flags = -D USE_RP2040=1 -D USE_BLE=1
lib_deps =
    ${env:interactive-test-rp2040.lib_deps}
[env:kalman-test]           ; Kalman filter test
[env:pyro-test]             ; Pyro channel test
[env:quat-angle]            ; Quaternion test
[env:sd-test]               ; SD card test
[env:servo-test]            ; Servo test
[env:states-test]           ; States test
[env:tvc-test]              ; TVC test
